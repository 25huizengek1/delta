name: delta-ci
on:
  workflow_call:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.txt'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pre-build-job:
    name: Pre-build job
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: gradle/build-logic/build
          key: build-logic-${{ hashFiles('gradle/build-logic/src/**', 'gradle/build-logic/*.kts') }}
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Setup git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email \
            "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Run spotless (auto-formatter)
        run: ./gradlew spotlessApply
      - name: Run unit tests
        run: ./gradlew testReleaseUnitTest
      - name: Generate diff and push to main
        run: |
          git fetch
          if ! git diff "@" "@{upstream}" --exit-code; then
            git add .
            git stash
            git rebase origin/HEAD
            git stash pop
          fi
          if ! git diff --exit-code; then
            git commit -am "Auto-formatted changes"
            git push
          fi
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
  build-apk:
    name: Build app
    runs-on: ubuntu-latest
    needs: [pre-build-job]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: gradle/build-logic/build
          key: build-logic-${{ hashFiles('gradle/build-logic/src/**', 'gradle/build-logic/*.kts') }}
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Decode signing keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: echo $KEYSTORE_BASE64 | base64 -d > app/sign.keystore
      - name: Configure signing key
        env:
          SIGN_BASE64: ${{ secrets.SIGN_BASE64 }}
        run: echo $SIGN_BASE64 | base64 -d > app/sign.json
      - name: Build app
        run: ./gradlew assembleDefaultKeySignedRelease
      - name: Move apk to root
        run: |
          mv app/build/outputs/apk/defaultKeySigned/release/app-defaultKeySigned-release.apk \
            app-release.apk
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app-release.apk
          retention-days: 7
          if-no-files-found: error
  synchronize-with-crowdin:
    name: Sync translations
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Sync with crowdin
        uses: crowdin/github-action@v2
        with:
          upload_sources: true
          upload_translations: true
          download_translations: true
          localization_branch_name: crowdin-sync
          create_pull_request: true
          pull_request_title: Sync translations
          pull_request_body: '_Synced by GitHub actions from [Crowdin](https://crowdin.com/project/delta-app)_'
          pull_request_base_branch_name: 'main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PAT }}
