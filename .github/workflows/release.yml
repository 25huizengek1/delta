name: delta-ci-release
on:
  schedule:
    - cron: '0 11 * * 5'
  workflow_dispatch:
concurrency:
  group: release
  cancel-in-progress: true
jobs:
  pre-release-job:
    name: Pre-release job
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.determine-version.outputs.versionName }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email \
            "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Determine app version
        id: determine-version
        run: bash scripts/update_ver.sh pre | tee "$GITHUB_ENV" "$GITHUB_OUTPUT"
      - name: Push to main
        run: |
          if ! git diff --exit-code; then
            git commit -am "Update version and prepare for release"
            git push
          fi
          git tag ${{ env.versionName }}
          git push --tags
  build:
    name: Build app
    uses: ./.github/workflows/ci.yml
    needs: [pre-release-job]
    permissions:
      contents: write
    secrets: inherit
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app
      - name: Calculate checksum and generate release notes
        run: |
          cat << "EOF" >> release_notes.txt
          ### Message

          To be filled.

          ### Checksum

          ```sh
          $ sha256sum app-release.apk
          EOF

          sha256sum app-release.apk >> release_notes.txt

          cat << "EOF" >> release_notes.txt
          ```

          Check the checksum after downloading the APK using `sha256sum` to
          ensure integrity of the file.
          EOF
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: true
          prerelease: false
          tag_name: ${{ needs.pre-release-job.outputs.version }}
          files: |
            app-release.apk
          discussion_category_name: Announcements
          body_path: release_notes.txt
  post-release-job:
    name: Post-release job
    runs-on: ubuntu-latest
    needs: [create-release]
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email \
            "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Modify versionCode and versionName
        run: bash scripts/update_ver.sh post
      - name: Push to main
        run: |
          git commit -am "Switch to a dev version name"
          git push
